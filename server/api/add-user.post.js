import dbConnect from '../utils/db.js'
import User from '../models/User.js'

export default defineEventHandler(async (event) => {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    await dbConnect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB')

    // –ß–∏—Ç–∞–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ (–¥–∞–Ω–Ω—ã–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞)
    const body = await readBody(event)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!body.username || !body.password) {
      return {
        error: '–¢—Ä–µ–±—É—é—Ç—Å—è –ø–æ–ª—è: username –∏ password'
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const existingUser = await User.findOne({ username: body.username })
    if (existingUser) {
      return {
        error: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'
      }
    }

    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const newUser = await User.create({
      username: body.username,
      password: body.password,  // –ü–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ —Ö—ç—à
      role: body.role || 'user' // –µ—Å–ª–∏ —Ä–æ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω–∞ ‚Äî –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'user'
    })

    console.log('üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:', newUser.username)
    return {
      message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω',
      user: {
        _id: newUser._id,
        username: newUser.username,
        role: newUser.role
      }
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error.message)
    return {
      error: error.message
    }
  }
})