import dbConnect from '../utils/db.js'
import User from '../models/User.js'

export default defineEventHandler(async (event) => {
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    await dbConnect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω
    const existingAdmin = await User.findOne({ username: 'admin' })

    if (existingAdmin) {
      console.log('üü¢ –ê–¥–º–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', existingAdmin.username)
      return {
        message: '–ê–¥–º–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
        user: existingAdmin
      }
    }

    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
    const newAdmin = await User.create({
      username: 'admin',
      password: '12345', // –ü–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ —Ö—ç—à
      role: 'admin'
    })

    console.log('üéâ –ê–¥–º–∏–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:', newAdmin.username)
    return {
      message: '–ê–¥–º–∏–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω',
      user: newAdmin
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∞:', error.message)
    return {
      error: error.message
    }
  }
})